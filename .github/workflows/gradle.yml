name: Java CI with Gradle

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build and Test with Gradle
        env:
          ALLOWED_CONNECTION_URL: ${{ secrets.ALLOWED_CONNECTION_URL }}
          AI_API_URL: ${{ secrets.AI_API_URL }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
        run: |
          ./gradlew clean test \
            -PALLOWED_CONNECTION_URL="$ALLOWED_CONNECTION_URL" \
            -PAI_API_URL="$AI_API_URL" \
            -PAI_API_KEY="$AI_API_KEY" \
            -Dspring.mongodb.embedded.version=4.6.1 \
            -Dspring.data.mongodb.database=testdb \
            --info

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/libs/*.jar
          if-no-files-found: error

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3.1.0

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: artifacts

      - name: List artifact directory
        run: ls -la artifacts

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: SCP to EC2
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          scp -i ~/.ssh/id_rsa artifacts/*.jar $EC2_USER@$EC2_HOST:/home/ubuntu

      - name: Set execute permission on jar
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST 'chmod +x /home/ubuntu/*.jar'

      - name: RUN java app
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          ALLOWED_CONNECTION_URL: ${{ secrets.ALLOWED_CONNECTION_URL }}
          AI_API_URL: ${{ secrets.AI_API_URL }}
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
        run: |
          ssh -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << EOF
            if [ -f /home/ubuntu/ai-pid ]; then
              PID=$(cat /home/ubuntu/ai-pid)
              if ps -p $PID > /dev/null; then
                echo "Algoy-AI 프로세스가 실행 중입니다. 이전 프로세스를 종료합니다."
                kill -9 $PID
              else
                echo "Algoy-AI PID 파일이 존재하지만 프로세스가 실행 중이지 않습니다."
              fi
            else
              echo "Algoy-AI PID 파일이 존재하지 않습니다."
            fi
      
            cd /home/ubuntu
            nohup java -jar Algoy-AI-0.0.1-SNAPSHOT.jar \
              --allowed-connection.url="${ALLOWED_CONNECTION_URL}" \
              --ai.api.url="${AI_API_URL}" \
              --ai.api.key="${AI_API_KEY}" \
              --spring.data.mongodb.uri="${MONGODB_URI}" \
              > nohup.out 2>&1 &
            
            echo $! > /home/ubuntu/ai-pid
            sleep 5
            if ps -p $(cat /home/ubuntu/ai-pid) > /dev/null; then
              echo "Algoy-AI 프로세스 시작됨"
              tail -n 20 nohup.out
            else
              echo "Algoy-AI 프로세스 시작 실패"
              cat nohup.out
            fi
          EOF
